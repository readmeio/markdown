@import '../../styles/mixins/dark-mode.scss';

@mixin callout($l-offset: 1.33rem) {
  // legacy variables
  --background: #{lighten(#dfe2e5, 8.75%)};
  --border: #{lighten(#6a737d, 12.5%)};
  --title: var(--text, var(--color-text-default));

  --Callout-bg: var(--background);
  --Callout-border: var(--border);

  background: var(--Callout-bg);
  border-color: var(--Callout-border);
  color: var(--text, var(--color-text-default));
  padding: $l-offset;

  @include dark-mode {
    --Callout-bg: rgba(var(--gray100-rgb), 0.05);
  }

  &_info {
    $color: #46b8da;
    --title: #{$color}; // legacy variable

    --Callout-bg: #e3edf2;
    --Callout-border: #{lighten($color, 5%)}; // should be #5bc0de

    @include dark-mode {
      --Callout-bg: rgba(var(--blue-rgb), 0.05);
    }
  }

  &_warn,
  &_warning {
    $color: #eea236;
    --title: #{$color}; // legacy variable

    --Callout-bg: #e3edf2;
    --Callout-border: #{lighten($color, 5%)}; // should be #5bc0de

    @include dark-mode {
      --Callout-bg: rgba(var(--yellow-rgb), 0.05);
    }
  }

  &_ok,
  &_okay,
  &_success {
    $color: #489e49;
    --title: #{$color}; // legacy variable

    --Callout-bg: #f3f8f3;
    --Callout-border: #{lighten($color, 5%)}; // should be #5bc0de

    @include dark-mode {
      --Callout-bg: rgba(var(--green-rgb), 0.05);
    }
  }

  &_err,
  &_error {
    $color: #d43f3a;
    --title: #{$color}; // legacy variable

    --Callout-bg: #fdf7f7;
    --Callout-border: #{lighten($color, 5%)}; // should be #d9534f

    @include dark-mode {
      --Callout-bg: rgba(var(--red-rgb), 0.05);
    }
  }

  > * {
    margin-left: $l-offset;
    position: relative;
  }
  ul,
  ol {
    padding-left: 1.3em;
  }

  a {
    color: inherit;
  }

  hr {
    border-color: var(--border, var(--markdown-edge, #eee));
  }

  blockquote {
    color: var(--color-text-default, var(--text));
    border-color: var(--border);
    border-width: 3px;
    padding: 0 0 0 0.8em;
  }

  .callout-heading {
    color: var(--title, var(--color-text-default, var(--text)));
    font-family: var(--markdown-title-font); // match h3
    font-size: 1.25em; // match h3
    font-weight: var(--markdown-title-weight, 600); // match h3
    line-height: 1.25; // match h3
    margin-bottom: calc(#{$l-offset} * 0.5);

    &:only-child {
      margin-bottom: 0;
    }

    &.empty {
      float: left;
      margin-top: calc(#{$l-offset} * 0.5);
      .callout-icon {
        line-height: 0;
      }
    }
    > * {
      color: inherit;
      margin: 0;
    }
    &:before {
      position: absolute;
      right: 100%;
      width: 2.4em;
      text-align: center;
      font: normal normal normal 1em/1 var(--icon-font);
    }
  }
  .callout-icon {
    float: left;
    margin-left: calc(-#{$l-offset} - 0.5em);
    margin-right: -0.25rem;
  }
}
@mixin calloutCustomIcons($R: callout) {
  --emoji: 1em;
  --icon-font: var(--fa-style-family, 'Font Awesome 6 Pro', FontAwesome);
  &-icon {
    font-size: var(--emoji, 0);
    color: var(--icon-color, inherit) !important;
  }
  &-icon:before {
    content: var(--icon);
    font-family: var(--icon-font);
    font-size: var(--icon-size, 1rem);
    font-weight: var(--icon-weight, 400);
    position: absolute;
    top: 50%;
    transform: translate(-50%, -50%);
    display: inline-block;
    text-rendering: auto;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
  @at-root .rdmdCallouts--useIconFont & {
    --emoji: unset;
    &_okay {
      /* thumbs up */
      --icon: '\f164';
    }
    &_info {
      /* info circle */
      --icon: '\f05a';
    }
    &_warn {
      /* warning triangle */
      --icon: '\f071';
    }
    &_error {
      /* warning circle */
      --icon: '\f06a';
    }
    &_default {
      /* warning circle */
      --emoji: 1rem;
    }
  }
}

.callout {
  &.callout {
    // bump specificity
    @include callout;
  }
  @include calloutCustomIcons;
  border-top-right-radius: var(--markdown-radius);
  border-bottom-right-radius: var(--markdown-radius);
}
