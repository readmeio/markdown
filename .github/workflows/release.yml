name: Release
on:
  push:
    branches:
      - main
      - next

jobs:
  Release:
    if: "!contains(github.event.head_commit.message, 'SKIP CI')"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [12.x]
    steps:

      # Setup the git repo & Node environemnt.
      #
      - name: Checkout branch (${{ github.ref }})
        uses: actions/checkout@v2.3.4
        with:
          persist-credentials: false # install breaks with persistant creds!
      - name: Setup node (v${{ matrix.node-version }})
        uses: actions/setup-node@v2.2.0
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: |
          npm ci
          npm run build --if-present
        env:
          PUPPETEER_SKIP_DOWNLOAD: true

      # Build, version, and tag a new release.
      #
      - name: Publish release
        run: npm run release # configured in .releaserc
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}                       # auth push to remote repo
          NPM_TOKEN: ${{ secrets.NPM_TOKEN || secrets.GH_TOKEN }} # auth publish to registry

      # Push release changes to the remote.
      #
      - name: Push to remote
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

      # Merge @latest release back to @next.
      #
      - name: Sync to next
        if: "github.ref == 'refs/heads/main'"
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: next
        continue-on-error: true

      # Sync docs to rdmd.readme.io
      #
      - name: Sync docs to rdmd.readme.io
        if: "github.ref == 'refs/heads/main'"
        run: npm run sync -- --key=$KEY
        env:
          KEY: ${{ secrets.RDME_KEY }}
